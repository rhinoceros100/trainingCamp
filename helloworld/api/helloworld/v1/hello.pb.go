// Code generated by protoc-gen-go. DO NOT EDIT.
// source: hello.proto

package hello

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SendHelloReq struct {
	Uid                  uint64   `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendHelloReq) Reset()         { *m = SendHelloReq{} }
func (m *SendHelloReq) String() string { return proto.CompactTextString(m) }
func (*SendHelloReq) ProtoMessage()    {}
func (*SendHelloReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_hello_f5a4c07ad11c6f9b, []int{0}
}
func (m *SendHelloReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendHelloReq.Unmarshal(m, b)
}
func (m *SendHelloReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendHelloReq.Marshal(b, m, deterministic)
}
func (dst *SendHelloReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendHelloReq.Merge(dst, src)
}
func (m *SendHelloReq) XXX_Size() int {
	return xxx_messageInfo_SendHelloReq.Size(m)
}
func (m *SendHelloReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SendHelloReq.DiscardUnknown(m)
}

var xxx_messageInfo_SendHelloReq proto.InternalMessageInfo

func (m *SendHelloReq) GetUid() uint64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *SendHelloReq) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type SendHelloRply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendHelloRply) Reset()         { *m = SendHelloRply{} }
func (m *SendHelloRply) String() string { return proto.CompactTextString(m) }
func (*SendHelloRply) ProtoMessage()    {}
func (*SendHelloRply) Descriptor() ([]byte, []int) {
	return fileDescriptor_hello_f5a4c07ad11c6f9b, []int{1}
}
func (m *SendHelloRply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendHelloRply.Unmarshal(m, b)
}
func (m *SendHelloRply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendHelloRply.Marshal(b, m, deterministic)
}
func (dst *SendHelloRply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendHelloRply.Merge(dst, src)
}
func (m *SendHelloRply) XXX_Size() int {
	return xxx_messageInfo_SendHelloRply.Size(m)
}
func (m *SendHelloRply) XXX_DiscardUnknown() {
	xxx_messageInfo_SendHelloRply.DiscardUnknown(m)
}

var xxx_messageInfo_SendHelloRply proto.InternalMessageInfo

type GetHelloReq struct {
	Uid                  uint64   `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetHelloReq) Reset()         { *m = GetHelloReq{} }
func (m *GetHelloReq) String() string { return proto.CompactTextString(m) }
func (*GetHelloReq) ProtoMessage()    {}
func (*GetHelloReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_hello_f5a4c07ad11c6f9b, []int{2}
}
func (m *GetHelloReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetHelloReq.Unmarshal(m, b)
}
func (m *GetHelloReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetHelloReq.Marshal(b, m, deterministic)
}
func (dst *GetHelloReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetHelloReq.Merge(dst, src)
}
func (m *GetHelloReq) XXX_Size() int {
	return xxx_messageInfo_GetHelloReq.Size(m)
}
func (m *GetHelloReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetHelloReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetHelloReq proto.InternalMessageInfo

func (m *GetHelloReq) GetUid() uint64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

type GetHelloRply struct {
	Msg                  string   `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetHelloRply) Reset()         { *m = GetHelloRply{} }
func (m *GetHelloRply) String() string { return proto.CompactTextString(m) }
func (*GetHelloRply) ProtoMessage()    {}
func (*GetHelloRply) Descriptor() ([]byte, []int) {
	return fileDescriptor_hello_f5a4c07ad11c6f9b, []int{3}
}
func (m *GetHelloRply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetHelloRply.Unmarshal(m, b)
}
func (m *GetHelloRply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetHelloRply.Marshal(b, m, deterministic)
}
func (dst *GetHelloRply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetHelloRply.Merge(dst, src)
}
func (m *GetHelloRply) XXX_Size() int {
	return xxx_messageInfo_GetHelloRply.Size(m)
}
func (m *GetHelloRply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetHelloRply.DiscardUnknown(m)
}

var xxx_messageInfo_GetHelloRply proto.InternalMessageInfo

func (m *GetHelloRply) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func init() {
	proto.RegisterType((*SendHelloReq)(nil), "hello.SendHelloReq")
	proto.RegisterType((*SendHelloRply)(nil), "hello.SendHelloRply")
	proto.RegisterType((*GetHelloReq)(nil), "hello.GetHelloReq")
	proto.RegisterType((*GetHelloRply)(nil), "hello.GetHelloRply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// HelloServiceClient is the client API for HelloService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HelloServiceClient interface {
	SendHello(ctx context.Context, in *SendHelloReq, opts ...grpc.CallOption) (*SendHelloRply, error)
	GetHello(ctx context.Context, in *GetHelloReq, opts ...grpc.CallOption) (*GetHelloRply, error)
}

type helloServiceClient struct {
	cc *grpc.ClientConn
}

func NewHelloServiceClient(cc *grpc.ClientConn) HelloServiceClient {
	return &helloServiceClient{cc}
}

func (c *helloServiceClient) SendHello(ctx context.Context, in *SendHelloReq, opts ...grpc.CallOption) (*SendHelloRply, error) {
	out := new(SendHelloRply)
	err := c.cc.Invoke(ctx, "/hello.HelloService/SendHello", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *helloServiceClient) GetHello(ctx context.Context, in *GetHelloReq, opts ...grpc.CallOption) (*GetHelloRply, error) {
	out := new(GetHelloRply)
	err := c.cc.Invoke(ctx, "/hello.HelloService/GetHello", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HelloServiceServer is the server API for HelloService service.
type HelloServiceServer interface {
	SendHello(context.Context, *SendHelloReq) (*SendHelloRply, error)
	GetHello(context.Context, *GetHelloReq) (*GetHelloRply, error)
}

func RegisterHelloServiceServer(s *grpc.Server, srv HelloServiceServer) {
	s.RegisterService(&_HelloService_serviceDesc, srv)
}

func _HelloService_SendHello_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendHelloReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HelloServiceServer).SendHello(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hello.HelloService/SendHello",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HelloServiceServer).SendHello(ctx, req.(*SendHelloReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _HelloService_GetHello_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetHelloReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HelloServiceServer).GetHello(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hello.HelloService/GetHello",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HelloServiceServer).GetHello(ctx, req.(*GetHelloReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _HelloService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "hello.HelloService",
	HandlerType: (*HelloServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendHello",
			Handler:    _HelloService_SendHello_Handler,
		},
		{
			MethodName: "GetHello",
			Handler:    _HelloService_GetHello_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "hello.proto",
}

func init() { proto.RegisterFile("hello.proto", fileDescriptor_hello_f5a4c07ad11c6f9b) }

var fileDescriptor_hello_f5a4c07ad11c6f9b = []byte{
	// 174 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xce, 0x48, 0xcd, 0xc9,
	0xc9, 0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x73, 0x94, 0x8c, 0xb8, 0x78, 0x82,
	0x53, 0xf3, 0x52, 0x3c, 0x40, 0x9c, 0xa0, 0xd4, 0x42, 0x21, 0x01, 0x2e, 0xe6, 0xd2, 0xcc, 0x14,
	0x09, 0x46, 0x05, 0x46, 0x0d, 0x96, 0x20, 0x10, 0x13, 0x24, 0x92, 0x5b, 0x9c, 0x2e, 0xc1, 0xa4,
	0xc0, 0xa8, 0xc1, 0x19, 0x04, 0x62, 0x2a, 0xf1, 0x73, 0xf1, 0x22, 0xf4, 0x14, 0xe4, 0x54, 0x2a,
	0xc9, 0x73, 0x71, 0xbb, 0xa7, 0x96, 0xe0, 0x36, 0x43, 0x49, 0x81, 0x8b, 0x07, 0xae, 0xa0, 0x20,
	0xa7, 0x12, 0x66, 0x26, 0x23, 0xdc, 0x4c, 0xa3, 0x7a, 0x2e, 0x1e, 0xb0, 0x74, 0x70, 0x6a, 0x51,
	0x59, 0x66, 0x72, 0xaa, 0x90, 0x05, 0x17, 0x27, 0xdc, 0x0e, 0x21, 0x61, 0x3d, 0x88, 0xcb, 0x91,
	0x5d, 0x2a, 0x25, 0x82, 0x21, 0x08, 0x72, 0x0a, 0x83, 0x90, 0x29, 0x17, 0x07, 0xcc, 0x2e, 0x21,
	0x21, 0xa8, 0x1a, 0x24, 0xd7, 0x49, 0x09, 0xa3, 0x8b, 0x81, 0xb5, 0x25, 0xb1, 0x81, 0x83, 0xc5,
	0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0xad, 0x5b, 0x19, 0x65, 0x25, 0x01, 0x00, 0x00,
}
