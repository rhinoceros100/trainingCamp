// Code generated by protoc-gen-go. DO NOT EDIT.
// source: equip.proto

package equip

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GetEquipReq struct {
	Uid                  uint64   `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetEquipReq) Reset()         { *m = GetEquipReq{} }
func (m *GetEquipReq) String() string { return proto.CompactTextString(m) }
func (*GetEquipReq) ProtoMessage()    {}
func (*GetEquipReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_equip_dcc2fa1ca0767576, []int{0}
}
func (m *GetEquipReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetEquipReq.Unmarshal(m, b)
}
func (m *GetEquipReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetEquipReq.Marshal(b, m, deterministic)
}
func (dst *GetEquipReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetEquipReq.Merge(dst, src)
}
func (m *GetEquipReq) XXX_Size() int {
	return xxx_messageInfo_GetEquipReq.Size(m)
}
func (m *GetEquipReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetEquipReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetEquipReq proto.InternalMessageInfo

func (m *GetEquipReq) GetUid() uint64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

type GetEquipReply struct {
	ErrorCode            int32    `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	EquipInfo            *Equip   `protobuf:"bytes,2,opt,name=equip_info,json=equipInfo,proto3" json:"equip_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetEquipReply) Reset()         { *m = GetEquipReply{} }
func (m *GetEquipReply) String() string { return proto.CompactTextString(m) }
func (*GetEquipReply) ProtoMessage()    {}
func (*GetEquipReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_equip_dcc2fa1ca0767576, []int{1}
}
func (m *GetEquipReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetEquipReply.Unmarshal(m, b)
}
func (m *GetEquipReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetEquipReply.Marshal(b, m, deterministic)
}
func (dst *GetEquipReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetEquipReply.Merge(dst, src)
}
func (m *GetEquipReply) XXX_Size() int {
	return xxx_messageInfo_GetEquipReply.Size(m)
}
func (m *GetEquipReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetEquipReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetEquipReply proto.InternalMessageInfo

func (m *GetEquipReply) GetErrorCode() int32 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

func (m *GetEquipReply) GetEquipInfo() *Equip {
	if m != nil {
		return m.EquipInfo
	}
	return nil
}

type Equip struct {
	BoxNum               int32    `protobuf:"varint,1,opt,name=box_num,json=boxNum,proto3" json:"box_num,omitempty"`
	BootNum              int32    `protobuf:"varint,2,opt,name=boot_num,json=bootNum,proto3" json:"boot_num,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Equip) Reset()         { *m = Equip{} }
func (m *Equip) String() string { return proto.CompactTextString(m) }
func (*Equip) ProtoMessage()    {}
func (*Equip) Descriptor() ([]byte, []int) {
	return fileDescriptor_equip_dcc2fa1ca0767576, []int{2}
}
func (m *Equip) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Equip.Unmarshal(m, b)
}
func (m *Equip) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Equip.Marshal(b, m, deterministic)
}
func (dst *Equip) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Equip.Merge(dst, src)
}
func (m *Equip) XXX_Size() int {
	return xxx_messageInfo_Equip.Size(m)
}
func (m *Equip) XXX_DiscardUnknown() {
	xxx_messageInfo_Equip.DiscardUnknown(m)
}

var xxx_messageInfo_Equip proto.InternalMessageInfo

func (m *Equip) GetBoxNum() int32 {
	if m != nil {
		return m.BoxNum
	}
	return 0
}

func (m *Equip) GetBootNum() int32 {
	if m != nil {
		return m.BootNum
	}
	return 0
}

func init() {
	proto.RegisterType((*GetEquipReq)(nil), "equip.GetEquipReq")
	proto.RegisterType((*GetEquipReply)(nil), "equip.GetEquipReply")
	proto.RegisterType((*Equip)(nil), "equip.Equip")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// EquipServiceClient is the client API for EquipService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EquipServiceClient interface {
	GetEquip(ctx context.Context, in *GetEquipReq, opts ...grpc.CallOption) (*GetEquipReply, error)
}

type equipServiceClient struct {
	cc *grpc.ClientConn
}

func NewEquipServiceClient(cc *grpc.ClientConn) EquipServiceClient {
	return &equipServiceClient{cc}
}

func (c *equipServiceClient) GetEquip(ctx context.Context, in *GetEquipReq, opts ...grpc.CallOption) (*GetEquipReply, error) {
	out := new(GetEquipReply)
	err := c.cc.Invoke(ctx, "/equip.EquipService/GetEquip", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EquipServiceServer is the server API for EquipService service.
type EquipServiceServer interface {
	GetEquip(context.Context, *GetEquipReq) (*GetEquipReply, error)
}

func RegisterEquipServiceServer(s *grpc.Server, srv EquipServiceServer) {
	s.RegisterService(&_EquipService_serviceDesc, srv)
}

func _EquipService_GetEquip_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetEquipReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EquipServiceServer).GetEquip(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/equip.EquipService/GetEquip",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EquipServiceServer).GetEquip(ctx, req.(*GetEquipReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _EquipService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "equip.EquipService",
	HandlerType: (*EquipServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetEquip",
			Handler:    _EquipService_GetEquip_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "equip.proto",
}

func init() { proto.RegisterFile("equip.proto", fileDescriptor_equip_dcc2fa1ca0767576) }

var fileDescriptor_equip_dcc2fa1ca0767576 = []byte{
	// 219 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4e, 0x2d, 0x2c, 0xcd,
	0x2c, 0xd0, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x73, 0x94, 0xe4, 0xb9, 0xb8, 0xdd,
	0x53, 0x4b, 0x5c, 0x41, 0xec, 0xa0, 0xd4, 0x42, 0x21, 0x01, 0x2e, 0xe6, 0xd2, 0xcc, 0x14, 0x09,
	0x46, 0x05, 0x46, 0x0d, 0x96, 0x20, 0x10, 0x53, 0x29, 0x9a, 0x8b, 0x17, 0xa1, 0xa0, 0x20, 0xa7,
	0x52, 0x48, 0x96, 0x8b, 0x2b, 0xb5, 0xa8, 0x28, 0xbf, 0x28, 0x3e, 0x39, 0x3f, 0x25, 0x15, 0xac,
	0x92, 0x35, 0x88, 0x13, 0x2c, 0xe2, 0x9c, 0x9f, 0x92, 0x2a, 0xa4, 0xcd, 0xc5, 0x05, 0x36, 0x39,
	0x3e, 0x33, 0x2f, 0x2d, 0x5f, 0x82, 0x49, 0x81, 0x51, 0x83, 0xdb, 0x88, 0x47, 0x0f, 0x62, 0x33,
	0xc4, 0x14, 0x4e, 0x30, 0xc7, 0x33, 0x2f, 0x2d, 0x5f, 0xc9, 0x9a, 0x8b, 0x15, 0x2c, 0x26, 0x24,
	0xce, 0xc5, 0x9e, 0x94, 0x5f, 0x11, 0x9f, 0x57, 0x9a, 0x0b, 0x35, 0x91, 0x2d, 0x29, 0xbf, 0xc2,
	0xaf, 0x34, 0x57, 0x48, 0x92, 0x8b, 0x23, 0x29, 0x3f, 0xbf, 0x04, 0x2c, 0xc3, 0x04, 0x96, 0x61,
	0x07, 0xf1, 0xfd, 0x4a, 0x73, 0x8d, 0xdc, 0xb8, 0x78, 0xc0, 0x9a, 0x83, 0x53, 0x8b, 0xca, 0x32,
	0x93, 0x53, 0x85, 0xcc, 0xb8, 0x38, 0x60, 0x2e, 0x15, 0x12, 0x82, 0xda, 0x88, 0xe4, 0x37, 0x29,
	0x11, 0x0c, 0xb1, 0x82, 0x9c, 0x4a, 0x25, 0x86, 0x24, 0x36, 0x70, 0x80, 0x18, 0x03, 0x02, 0x00,
	0x00, 0xff, 0xff, 0xea, 0x8d, 0x39, 0x66, 0x1f, 0x01, 0x00, 0x00,
}
